# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-and-upload:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        platform: [Windows, Linux, macOS]
    steps:
      - uses: actions/checkout@v3
      - name: Download V compiler
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            curl -fsS -o v_windows.zip https://github.com/vlang/v/releases/download/weekly.2025.09/v_windows.zip
            unzip v_windows.zip -d v
            export PATH=$PATH:$(pwd)/v
          elif [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            curl -fsS -o v_linux.zip https://github.com/vlang/v/releases/download/weekly.2025.09/v_linux.zip
            unzip v_linux.zip -d v
            export PATH=$PATH:$(pwd)/v
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            if [ "$(uname -m)" == "arm64" ]; then
              curl -fsS -o v_macos_arm64.zip https://github.com/vlang/v/releases/download/weekly.2025.09/v_macos_arm64.zip
              unzip v_macos_arm64.zip -d v
            else
              curl -fsS -o v_macos_x86_64.zip https://github.com/vlang/v/releases/download/weekly.2025.09/v_macos_x86_64.zip
              unzip v_macos_x86_64.zip -d v
            fi
            export PATH=$PATH:$(pwd)/v
      - name: Build
        run: v src/main.v -o pulse_${{ matrix.platform }}.exe
      - name: Create release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_NAME: 'Latest Release'
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: pulse_${{ matrix.platform }}.exe
          asset_name: pulse_${{ matrix.platform }}.exe
          asset_type: application/octet-stream
